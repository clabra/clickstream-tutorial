# Define una fuente de tipo directorio spooling
# Esta fuente vigilara el directorio dado para ver cuando aparecen nuevos ficheros 
# y procedera a parsear los eventos de los ficheros segun vayan apareciendo 
client.sources=r1
client.sources.r1.channels=ch1
client.sources.r1.type=spooldir
client.sources.r1.spoolDir=/opt/weblogs
# Se le asigna un interceptor, un proceso capaz de borrar o modificar cada evento
# En este caso el interceptor a√±ade un timestamp en el encabezamiento de cada evento
client.sources.r1.interceptors.i1.type=timestamp
client.sources.r1.interceptors=i1
# Define un canal de tipo fichero que actuara como repositorio para guardar los datos en transito
client.channels=ch1
client.channels.ch1.type=FILE
# Define dos sumideros de tipo Avro
client.sinks=k1 k2
client.sinks.k1.type=avro
client.sinks.k1.hostname=localhost
client.sinks.k1.port=4141
client.sinks.k2.type=avro
client.sinks.k2.hostname=localhost
client.sinks.k2.port=4142
client.sinks.k1.channel=ch1
client.sinks.k2.channel=ch1
# Los datos se pasan a un grupo de dos sumideros situados en dos colectores distintos para hacer balanceo de carga (tipo round robin)
# Habitualmente los colectores estaran en maquinas distintas para que, si uno de ellos se cae, el otro siga funcionando  
client.sinkgroups=g1
client.sinkgroups.g1.sinks=k1 k2
client.sinkgroups.g1.processor.type=load_balance
client.sinkgroups.g1.processor.selector=round_robin
